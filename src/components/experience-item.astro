---
import Link from './link.astro'

interface Props {
	city?: string
	date: string
	organisation?: string
	organisationUrl?: string
	techStack?: string[]
	title: string
	titleUnion?: string
}

const {
	city,
	date,
	organisation,
	organisationUrl,
	techStack,
	title,
	titleUnion = ' at ',
} = Astro.props
---

<li class="experience-item">
	<strong class="experience-item-title">
		<em>{title}</em>{organisation && titleUnion}{
			organisation && (
				<em>
					<Link href={organisationUrl}>{organisation}</Link>
				</em>
			)
		}
	</strong>
	<br />
	<small class="experience-item-date">
		{city ? `${date}. ${city}` : date}.
	</small>
	{
		Astro.slots.has('default') && (
			<div class="experience-item-description">
				<slot />
			</div>
		)
	}
	{
		techStack && (
			<small class="experience-item-stack">
				<span>Tech stack:</span> {techStack.join(', ')}.
			</small>
		)
	}
</li>

<style lang="scss">
	@use '../styles/utils/mixins' as m;

	@layer component {
		.experience-item {
			list-style: none;
			line-height: 1.25;
			margin-block: var(--margin-extrasmall);
			margin-inline: 0;
			@include m.enter-screen-animation-subtle;
		}

		.experience-item-title {
			font-size: 1.25rem;
			font-weight: 300;

			> em {
				font-style: normal;
				font-weight: 700;
			}
		}

		.experience-item-date {
			color: var(--color-primary-dark);
			font-size: 0.85em;
		}

		.experience-item-description {
			line-height: 1.5;
			margin-block: 0.25lh;
			margin-inline: 0;

			:global(p),
			:global(ul) {
				margin: 0;
			}

			:global(ul) {
				list-style-type: disc;
			}
		}

		.experience-item-stack {
			color: var(--color-foreground-light);
			font-weight: 300;

			:global(span) {
				font-weight: 400;
			}
		}

		@media print {
			.experience-item-title a {
				color: var(--color-foreground);
				text-decoration: none;

				&::after {
					display: none;
				}
			}
		}
	}
</style>
