---
import type { HTMLAttributes } from 'astro/types'
import * as cheerio from 'cheerio'

interface Props extends HTMLAttributes<'a'> {
	ariaLabel?: string
}

const { ariaLabel, href, rel, target, ...rest } = Astro.props

const isExternalLink = typeof href === 'string' && href.startsWith('https://')

const linkTarget = target ?? (isExternalLink ? '_blank' : undefined)

const linkContent = cheerio.load(await Astro.slots.render('default'))
const linkText = linkContent('body').text().trim()

let ariaLabelOpensInNewTab: string | undefined = undefined
if (linkTarget === '_blank') {
	ariaLabelOpensInNewTab = `${linkText} (opens in a new tab)`
}

const linkAriaLabel = ariaLabel ?? ariaLabelOpensInNewTab

let linkRel = rel
if (isExternalLink) {
	linkRel = rel ? `${rel} noopener` : 'noopener'
}
---

{
	href ? (
		<a
			aria-label={linkAriaLabel}
			href={href}
			rel={linkRel}
			target={linkTarget}
			{...rest}
		>
			<slot />
		</a>
	) : (
		<span {...rest}>
			<slot />
		</span>
	)
}
