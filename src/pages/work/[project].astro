---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro'
import type { CreativeWork, WithContext } from 'schema-dts'
import { getCollection, render } from 'astro:content'

import Layout from '../../layouts/layout.astro'
import Link from '../../components/link.astro'
import siteMetadata from '../../helpers/site-metadata'

import styles from '../../styles/project-page.module.scss'

export const getStaticPaths = (async () => {
	const projects = await getCollection('project')
	return projects.map((project) => ({
		params: { project: project.id },
		props: { project },
	}))
}) satisfies GetStaticPaths

type Props = InferGetStaticPropsType<typeof getStaticPaths>

const { project } = Astro.props
const { Content } = await render(project)
const site = Astro.site?.toString()

const jsonLd: WithContext<CreativeWork> = {
	'@context': 'https://schema.org',
	'@type': 'CreativeWork',
	name: project.data.title,
	headline: `${project.data.title}: ${project.data.subtitle}`,
	description: project.data.excerpt,
	url: Astro.url.toString(),
	image: {
		'@type': 'ImageObject',
		url: new URL(project.data.thumbnail.src, Astro.url).toString(),
	},
	author: {
		'@type': 'Person',
		name: siteMetadata.author.name,
		url: site,
		sameAs: [
			`https://bsky.app/profile/${siteMetadata.author.social.bluesky}`,
			`https://github.com/${siteMetadata.author.social.github}`,
			`https://www.linkedin.com/in/${siteMetadata.author.social.linkedin}/`,
		],
	},
}
---

<Layout
	title={project.data.title}
	meta={{
		title: `${project.data.title} - Work - Guillem Andreu`,
		description: project.data.excerpt,
		image: { alt: '', ...project.data.thumbnail },
	}}
>
	<article class={styles.project}>
		<script
			is:inline
			type="application/ld+json"
			set:html={JSON.stringify(jsonLd)}
		/>
		<h1>{project.data.title}<span class="period">.</span></h1>
		<h2>{project.data.subtitle}.</h2>
		<Content components={{ a: Link }} />
	</article>
</Layout>
